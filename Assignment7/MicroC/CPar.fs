// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)

open Absyn

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10

# 19 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | TERNARY
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | PREINC
  | PREDEC
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | SWITCH
  | CASE
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_TERNARY
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_PREINC
    | TOKEN_PREDEC
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_Cases
    | NONTERM_Case
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | NOT  -> 12 
  | SEQOR  -> 13 
  | SEQAND  -> 14 
  | TERNARY  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | PREINC  -> 27 
  | PREDEC  -> 28 
  | CHAR  -> 29 
  | ELSE  -> 30 
  | IF  -> 31 
  | INT  -> 32 
  | NULL  -> 33 
  | PRINT  -> 34 
  | PRINTLN  -> 35 
  | RETURN  -> 36 
  | VOID  -> 37 
  | WHILE  -> 38 
  | FOR  -> 39 
  | SWITCH  -> 40 
  | CASE  -> 41 
  | CSTSTRING _ -> 42 
  | NAME _ -> 43 
  | CSTINT _ -> 44 
  | CSTBOOL _ -> 45 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_NOT 
  | 13 -> TOKEN_SEQOR 
  | 14 -> TOKEN_SEQAND 
  | 15 -> TOKEN_TERNARY 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_PREINC 
  | 28 -> TOKEN_PREDEC 
  | 29 -> TOKEN_CHAR 
  | 30 -> TOKEN_ELSE 
  | 31 -> TOKEN_IF 
  | 32 -> TOKEN_INT 
  | 33 -> TOKEN_NULL 
  | 34 -> TOKEN_PRINT 
  | 35 -> TOKEN_PRINTLN 
  | 36 -> TOKEN_RETURN 
  | 37 -> TOKEN_VOID 
  | 38 -> TOKEN_WHILE 
  | 39 -> TOKEN_FOR 
  | 40 -> TOKEN_SWITCH 
  | 41 -> TOKEN_CASE 
  | 42 -> TOKEN_CSTSTRING 
  | 43 -> TOKEN_NAME 
  | 44 -> TOKEN_CSTINT 
  | 45 -> TOKEN_CSTBOOL 
  | 48 -> TOKEN_end_of_input
  | 46 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_Cases 
    | 33 -> NONTERM_Cases 
    | 34 -> NONTERM_Cases 
    | 35 -> NONTERM_Case 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_AtExprNotAccess 
    | 64 -> NONTERM_AtExprNotAccess 
    | 65 -> NONTERM_AtExprNotAccess 
    | 66 -> NONTERM_Access 
    | 67 -> NONTERM_Access 
    | 68 -> NONTERM_Access 
    | 69 -> NONTERM_Access 
    | 70 -> NONTERM_Access 
    | 71 -> NONTERM_Exprs 
    | 72 -> NONTERM_Exprs 
    | 73 -> NONTERM_Exprs1 
    | 74 -> NONTERM_Exprs1 
    | 75 -> NONTERM_Const 
    | 76 -> NONTERM_Const 
    | 77 -> NONTERM_Const 
    | 78 -> NONTERM_Const 
    | 79 -> NONTERM_Type 
    | 80 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 48 
let _fsyacc_tagOfErrorTerminal = 46

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | TERNARY  -> "TERNARY" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | PREINC  -> "PREINC" 
  | PREDEC  -> "PREDEC" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | TERNARY  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | PREINC  -> (null : System.Object) 
  | PREDEC  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;2us;65535us;0us;2us;4us;5us;2us;65535us;0us;4us;4us;4us;8us;65535us;0us;6us;4us;6us;25us;34us;29us;34us;35us;34us;37us;42us;40us;42us;43us;42us;4us;65535us;9us;11us;10us;11us;14us;15us;16us;17us;2us;65535us;0us;8us;4us;8us;2us;65535us;25us;26us;29us;30us;3us;65535us;25us;33us;29us;33us;35us;36us;13us;65535us;27us;28us;31us;32us;37us;54us;40us;54us;43us;54us;61us;54us;62us;54us;64us;54us;65us;54us;73us;54us;74us;54us;83us;54us;96us;97us;3us;65535us;37us;38us;40us;41us;43us;44us;4us;65535us;37us;40us;40us;40us;43us;40us;62us;99us;10us;65535us;37us;45us;40us;45us;43us;45us;61us;63us;62us;46us;64us;66us;65us;66us;73us;75us;74us;75us;83us;84us;2us;65535us;89us;90us;92us;93us;2us;65535us;89us;92us;92us;92us;6us;65535us;37us;47us;40us;47us;43us;47us;62us;47us;65us;98us;74us;100us;41us;65535us;37us;48us;40us;48us;43us;48us;50us;52us;57us;60us;58us;59us;61us;48us;62us;48us;64us;48us;65us;48us;69us;72us;70us;71us;73us;48us;74us;48us;77us;78us;79us;80us;81us;82us;83us;48us;86us;87us;106us;107us;109us;134us;112us;113us;114us;115us;135us;117us;136us;118us;137us;119us;138us;120us;139us;121us;140us;122us;141us;123us;142us;124us;143us;125us;144us;126us;145us;127us;146us;128us;147us;129us;152us;131us;153us;132us;155us;130us;166us;133us;169us;134us;41us;65535us;37us;103us;40us;103us;43us;103us;50us;103us;57us;103us;58us;103us;61us;103us;62us;103us;64us;103us;65us;103us;69us;103us;70us;103us;73us;103us;74us;103us;77us;103us;79us;103us;81us;103us;83us;103us;86us;103us;106us;103us;109us;103us;112us;103us;114us;103us;135us;103us;136us;103us;137us;103us;138us;103us;139us;103us;140us;103us;141us;103us;142us;103us;143us;103us;144us;103us;145us;103us;146us;103us;147us;103us;152us;103us;153us;103us;155us;104us;166us;103us;169us;103us;42us;65535us;37us;105us;40us;105us;43us;105us;50us;105us;57us;105us;58us;105us;61us;105us;62us;105us;64us;105us;65us;105us;69us;105us;70us;105us;73us;105us;74us;105us;77us;105us;79us;105us;81us;105us;83us;105us;86us;105us;106us;105us;109us;105us;112us;105us;114us;105us;135us;105us;136us;105us;137us;105us;138us;105us;139us;105us;140us;105us;141us;105us;142us;105us;143us;105us;144us;105us;145us;105us;146us;105us;147us;105us;152us;105us;153us;105us;155us;105us;163us;165us;166us;105us;169us;105us;46us;65535us;37us;102us;40us;102us;43us;102us;50us;102us;57us;102us;58us;102us;61us;102us;62us;102us;64us;102us;65us;102us;69us;102us;70us;102us;73us;102us;74us;102us;77us;102us;79us;102us;81us;102us;83us;102us;86us;102us;106us;102us;109us;102us;112us;102us;114us;102us;135us;102us;136us;102us;137us;102us;138us;102us;139us;102us;140us;102us;141us;102us;142us;102us;143us;102us;144us;102us;145us;102us;146us;102us;147us;102us;148us;149us;150us;151us;152us;102us;153us;102us;155us;101us;157us;158us;160us;161us;163us;164us;166us;102us;169us;102us;1us;65535us;109us;110us;2us;65535us;109us;168us;169us;170us;42us;65535us;37us;154us;40us;154us;43us;154us;50us;154us;57us;154us;58us;154us;61us;154us;62us;154us;64us;154us;65us;154us;69us;154us;70us;154us;73us;154us;74us;154us;77us;154us;79us;154us;81us;154us;83us;154us;86us;154us;106us;154us;109us;154us;112us;154us;114us;154us;135us;154us;136us;154us;137us;154us;138us;154us;139us;154us;140us;154us;141us;154us;142us;154us;143us;154us;144us;154us;145us;154us;146us;154us;147us;154us;152us;154us;153us;154us;155us;154us;163us;154us;166us;154us;169us;154us;8us;65535us;0us;10us;4us;10us;25us;9us;29us;9us;35us;9us;37us;9us;40us;9us;43us;9us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;6us;9us;18us;23us;26us;29us;33us;47us;51us;56us;67us;70us;73us;80us;122us;164us;207us;254us;256us;259us;302us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;3us;1us;3us;1us;4us;1us;4us;1us;5us;1us;6us;2us;6us;13us;3us;6us;10us;11us;1us;7us;2us;7us;13us;1us;8us;3us;8us;10us;11us;1us;9us;3us;9us;10us;11us;1us;9us;2us;10us;11us;1us;10us;1us;11us;1us;11us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;13us;1us;13us;1us;13us;1us;13us;1us;15us;2us;16us;17us;1us;17us;1us;17us;1us;18us;1us;18us;1us;18us;1us;20us;1us;20us;1us;21us;1us;21us;1us;21us;1us;22us;3us;22us;28us;36us;1us;23us;15us;24us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;1us;24us;2us;25us;26us;1us;25us;15us;26us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;1us;26us;1us;27us;1us;28us;3us;28us;36us;37us;1us;28us;3us;28us;36us;37us;17us;28us;36us;37us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;15us;28us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;1us;28us;3us;28us;36us;37us;1us;28us;1us;28us;2us;28us;36us;1us;28us;1us;29us;2us;29us;38us;1us;29us;2us;29us;38us;16us;29us;38us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;15us;29us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;1us;29us;2us;29us;38us;1us;29us;1us;30us;1us;30us;15us;30us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;1us;30us;15us;30us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;1us;30us;15us;30us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;1us;30us;1us;30us;1us;31us;1us;31us;15us;31us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;1us;31us;1us;31us;1us;31us;1us;31us;2us;33us;34us;1us;34us;1us;35us;1us;35us;1us;35us;1us;35us;1us;36us;1us;37us;1us;38us;4us;39us;42us;67us;70us;3us;39us;42us;70us;1us;40us;2us;40us;64us;1us;41us;1us;42us;15us;42us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;2us;43us;66us;1us;43us;1us;43us;1us;43us;1us;44us;15us;44us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;1us;45us;15us;45us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;1us;46us;15us;47us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;15us;47us;48us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;15us;47us;48us;49us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;15us;47us;48us;49us;50us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;15us;47us;48us;49us;50us;51us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;15us;47us;48us;49us;50us;51us;52us;52us;53us;54us;55us;56us;57us;58us;59us;62us;15us;47us;48us;49us;50us;51us;52us;53us;53us;54us;55us;56us;57us;58us;59us;62us;15us;47us;48us;49us;50us;51us;52us;53us;54us;54us;55us;56us;57us;58us;59us;62us;15us;47us;48us;49us;50us;51us;52us;53us;54us;55us;55us;56us;57us;58us;59us;62us;15us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;56us;57us;58us;59us;62us;15us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;57us;58us;59us;62us;15us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;58us;59us;62us;15us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;59us;62us;14us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;15us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;62us;15us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;62us;15us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;70us;16us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;57us;58us;59us;62us;73us;74us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;1us;52us;1us;53us;1us;54us;1us;55us;1us;56us;1us;57us;1us;58us;1us;59us;1us;60us;2us;60us;70us;1us;61us;2us;61us;70us;1us;62us;1us;62us;1us;63us;2us;64us;67us;1us;64us;1us;65us;2us;65us;70us;1us;66us;1us;67us;2us;67us;70us;1us;67us;2us;68us;69us;2us;68us;70us;1us;69us;1us;70us;1us;70us;1us;72us;1us;74us;1us;74us;1us;75us;1us;76us;1us;77us;1us;77us;1us;78us;1us;79us;1us;80us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;18us;20us;23us;27us;29us;32us;34us;38us;40us;44us;46us;49us;51us;53us;55us;57us;59us;61us;63us;65us;67us;69us;71us;73us;75us;77us;80us;82us;84us;86us;88us;90us;92us;94us;96us;98us;100us;102us;106us;108us;124us;126us;129us;131us;147us;149us;151us;153us;157us;159us;163us;181us;197us;199us;203us;205us;207us;210us;212us;214us;217us;219us;222us;239us;255us;257us;260us;262us;264us;266us;282us;284us;300us;302us;318us;320us;322us;324us;326us;342us;344us;346us;348us;350us;353us;355us;357us;359us;361us;363us;365us;367us;369us;374us;378us;380us;383us;385us;387us;403us;406us;408us;410us;412us;414us;430us;432us;448us;450us;466us;482us;498us;514us;530us;546us;562us;578us;594us;610us;626us;642us;658us;673us;689us;705us;721us;738us;740us;742us;744us;746us;748us;750us;752us;754us;756us;758us;760us;762us;764us;766us;769us;771us;774us;776us;778us;780us;783us;785us;787us;790us;792us;794us;797us;799us;802us;805us;807us;809us;811us;813us;815us;817us;819us;821us;823us;825us;827us;829us;|]
let _fsyacc_action_rows = 178
let _fsyacc_actionTableElements = [|3us;16386us;29us;177us;32us;176us;37us;23us;0us;49152us;1us;32768us;0us;3us;0us;16385us;3us;16386us;29us;177us;32us;176us;37us;23us;0us;16387us;1us;32768us;7us;7us;0us;16388us;0us;16389us;3us;32768us;1us;16us;24us;14us;43us;12us;3us;32768us;1us;16us;24us;14us;43us;13us;1us;16390us;5us;19us;0us;16391us;1us;16391us;1us;29us;3us;32768us;1us;16us;24us;14us;43us;12us;1us;16392us;5us;19us;3us;32768us;1us;16us;24us;14us;43us;12us;2us;32768us;2us;18us;5us;19us;0us;16393us;2us;32768us;6us;20us;44us;21us;0us;16394us;1us;32768us;6us;22us;0us;16395us;1us;32768us;43us;24us;1us;32768us;1us;25us;2us;16398us;29us;177us;32us;176us;1us;32768us;2us;27us;1us;32768us;3us;37us;0us;16396us;2us;16398us;29us;177us;32us;176us;1us;32768us;2us;31us;1us;32768us;3us;37us;0us;16397us;0us;16399us;1us;16400us;8us;35us;2us;32768us;29us;177us;32us;176us;0us;16401us;21us;16403us;1us;155us;3us;37us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;29us;177us;31us;56us;32us;176us;33us;175us;34us;114us;35us;116us;36us;50us;38us;68us;39us;76us;40us;85us;43us;108us;44us;171us;45us;172us;1us;32768us;4us;39us;0us;16402us;21us;16403us;1us;155us;3us;37us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;29us;177us;31us;56us;32us;176us;33us;175us;34us;114us;35us;116us;36us;50us;38us;68us;39us;76us;40us;85us;43us;108us;44us;171us;45us;172us;0us;16404us;1us;32768us;7us;43us;21us;16403us;1us;155us;3us;37us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;29us;177us;31us;56us;32us;176us;33us;175us;34us;114us;35us;116us;36us;50us;38us;68us;39us;76us;40us;85us;43us;108us;44us;171us;45us;172us;0us;16405us;0us;16406us;1us;16406us;30us;65us;0us;16407us;15us;32768us;7us;49us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;0us;16408us;14us;32768us;1us;155us;7us;51us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;0us;16409us;15us;32768us;7us;53us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;0us;16410us;0us;16411us;1us;32768us;1us;57us;1us;32768us;1us;58us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;15us;32768us;2us;62us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;15us;32768us;2us;61us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;19us;32768us;1us;155us;3us;37us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;31us;55us;33us;175us;34us;114us;35us;116us;36us;50us;38us;67us;39us;76us;40us;85us;43us;108us;44us;171us;45us;172us;19us;32768us;1us;155us;3us;37us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;31us;56us;33us;175us;34us;114us;35us;116us;36us;50us;38us;68us;39us;76us;40us;85us;43us;108us;44us;171us;45us;172us;1us;32768us;30us;64us;19us;32768us;1us;155us;3us;37us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;31us;55us;33us;175us;34us;114us;35us;116us;36us;50us;38us;67us;39us;76us;40us;85us;43us;108us;44us;171us;45us;172us;19us;32768us;1us;155us;3us;37us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;31us;56us;33us;175us;34us;114us;35us;116us;36us;50us;38us;68us;39us;76us;40us;85us;43us;108us;44us;171us;45us;172us;0us;16412us;1us;32768us;1us;69us;1us;32768us;1us;70us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;15us;32768us;2us;74us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;15us;32768us;2us;73us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;19us;32768us;1us;155us;3us;37us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;31us;55us;33us;175us;34us;114us;35us;116us;36us;50us;38us;67us;39us;76us;40us;85us;43us;108us;44us;171us;45us;172us;19us;32768us;1us;155us;3us;37us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;31us;56us;33us;175us;34us;114us;35us;116us;36us;50us;38us;68us;39us;76us;40us;85us;43us;108us;44us;171us;45us;172us;0us;16413us;1us;32768us;1us;77us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;15us;32768us;7us;79us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;15us;32768us;7us;81us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;15us;32768us;2us;83us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;19us;32768us;1us;155us;3us;37us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;31us;55us;33us;175us;34us;114us;35us;116us;36us;50us;38us;67us;39us;76us;40us;85us;43us;108us;44us;171us;45us;172us;0us;16414us;1us;32768us;1us;86us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;15us;32768us;2us;88us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;1us;32768us;3us;89us;1us;16416us;41us;94us;1us;32768us;4us;91us;0us;16415us;1us;16416us;41us;94us;0us;16418us;1us;32768us;44us;95us;1us;32768us;11us;96us;1us;32768us;3us;37us;0us;16419us;0us;16420us;0us;16421us;0us;16422us;3us;16423us;2us;162us;5us;166us;9us;106us;2us;16423us;5us;166us;9us;106us;0us;16424us;1us;16424us;2us;156us;0us;16425us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;14us;16426us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;1us;16450us;1us;109us;13us;16455us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;1us;32768us;2us;111us;0us;16427us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;1us;16428us;15us;152us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;14us;16429us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;0us;16430us;4us;16431us;15us;152us;24us;137us;25us;138us;26us;139us;4us;16432us;15us;152us;24us;137us;25us;138us;26us;139us;1us;16433us;15us;152us;1us;16434us;15us;152us;1us;16435us;15us;152us;10us;16436us;15us;152us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;10us;16437us;15us;152us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;6us;16438us;15us;152us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;6us;16439us;15us;152us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;6us;16440us;15us;152us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;6us;16441us;15us;152us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;12us;16442us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;13us;16443us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;14us;32768us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;15us;32768us;11us;153us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;14us;16446us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;15us;32768us;6us;167us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;15us;16457us;8us;169us;13us;147us;14us;146us;15us;152us;16us;140us;17us;141us;18us;142us;19us;143us;20us;144us;21us;145us;22us;135us;23us;136us;24us;137us;25us;138us;26us;139us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;3us;32768us;1us;160us;24us;163us;43us;159us;1us;16444us;5us;166us;3us;32768us;1us;160us;24us;163us;43us;159us;1us;16445us;5us;166us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;0us;16447us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;0us;16448us;3us;32768us;1us;160us;24us;163us;43us;159us;1us;16449us;5us;166us;0us;16450us;3us;32768us;1us;160us;24us;163us;43us;159us;2us;32768us;2us;162us;5us;166us;0us;16451us;8us;32768us;1us;155us;10us;157us;23us;173us;24us;163us;33us;175us;43us;159us;44us;171us;45us;172us;1us;16452us;5us;166us;0us;16453us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;0us;16454us;0us;16456us;13us;32768us;1us;155us;10us;157us;12us;112us;23us;173us;24us;163us;27us;148us;28us;150us;33us;175us;34us;114us;35us;116us;43us;108us;44us;171us;45us;172us;0us;16458us;0us;16459us;0us;16460us;1us;32768us;44us;174us;0us;16461us;0us;16462us;0us;16463us;0us;16464us;|]
let _fsyacc_actionTableRowOffsets = [|0us;4us;5us;7us;8us;12us;13us;15us;16us;17us;21us;25us;27us;28us;30us;34us;36us;40us;43us;44us;47us;48us;50us;51us;53us;55us;58us;60us;62us;63us;66us;68us;70us;71us;72us;74us;77us;78us;100us;102us;103us;125us;126us;128us;150us;151us;152us;154us;155us;171us;172us;187us;188us;204us;205us;206us;208us;210us;224us;238us;254us;270us;290us;310us;312us;332us;352us;353us;355us;357us;371us;385us;401us;417us;437us;457us;458us;460us;474us;490us;504us;520us;534us;550us;570us;571us;573us;587us;603us;605us;607us;609us;610us;612us;613us;615us;617us;619us;620us;621us;622us;623us;627us;630us;631us;633us;634us;648us;663us;665us;679us;681us;682us;696us;698us;712us;727us;728us;733us;738us;740us;742us;744us;755us;766us;773us;780us;787us;794us;807us;821us;836us;852us;867us;883us;899us;913us;927us;941us;955us;969us;983us;997us;1011us;1025us;1039us;1053us;1067us;1081us;1085us;1087us;1091us;1093us;1107us;1121us;1122us;1136us;1137us;1141us;1143us;1144us;1148us;1151us;1152us;1161us;1163us;1164us;1178us;1179us;1180us;1194us;1195us;1196us;1197us;1199us;1200us;1201us;1202us;|]
let _fsyacc_reductionSymbolCounts = [|1us;2us;0us;2us;2us;1us;2us;1us;2us;3us;3us;4us;6us;6us;0us;1us;1us;3us;3us;0us;2us;3us;1us;1us;2us;2us;3us;1us;7us;5us;9us;7us;0us;1us;2us;4us;7us;5us;5us;1us;1us;1us;3us;4us;2us;2us;1us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;2us;2us;5us;1us;3us;2us;1us;3us;2us;2us;4us;0us;1us;1us;3us;1us;1us;2us;1us;1us;1us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;3us;3us;4us;5us;5us;5us;5us;5us;6us;6us;7us;7us;8us;8us;9us;10us;10us;10us;11us;11us;12us;12us;12us;12us;12us;12us;12us;12us;13us;13us;13us;14us;15us;15us;15us;16us;16us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;18us;18us;18us;19us;19us;19us;19us;19us;20us;20us;21us;21us;22us;22us;22us;22us;23us;23us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16385us;65535us;16387us;65535us;16388us;16389us;65535us;65535us;65535us;16391us;65535us;65535us;65535us;65535us;65535us;16393us;65535us;16394us;65535us;16395us;65535us;65535us;65535us;65535us;65535us;16396us;65535us;65535us;65535us;16397us;16399us;65535us;65535us;16401us;65535us;65535us;16402us;65535us;16404us;65535us;65535us;16405us;16406us;65535us;16407us;65535us;16408us;65535us;16409us;65535us;16410us;16411us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16412us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16413us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16414us;65535us;65535us;65535us;65535us;65535us;65535us;16415us;65535us;16418us;65535us;65535us;65535us;16419us;16420us;16421us;16422us;65535us;65535us;16424us;65535us;16425us;65535us;65535us;65535us;65535us;65535us;16427us;65535us;65535us;65535us;65535us;16430us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16447us;65535us;16448us;65535us;65535us;16450us;65535us;65535us;16451us;65535us;65535us;16453us;65535us;16454us;16456us;65535us;16458us;16459us;16460us;65535us;16461us;16462us;16463us;16464us;|]
let _fsyacc_reductions = lazy [|
# 447 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 456 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "CPar.fsy"
                                                               Prog _1 
                   )
# 41 "CPar.fsy"
                 : Absyn.program));
# 467 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "CPar.fsy"
                                                               [] 
                   )
# 45 "CPar.fsy"
                 : 'gentype_Topdecs));
# 477 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 46 "CPar.fsy"
                 : 'gentype_Topdecs));
# 489 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 50 "CPar.fsy"
                 : 'gentype_Topdec));
# 500 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               _1 
                   )
# 51 "CPar.fsy"
                 : 'gentype_Topdec));
# 511 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Vardec));
# 523 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 59 "CPar.fsy"
                 : 'gentype_Vardesc));
# 534 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 60 "CPar.fsy"
                 : 'gentype_Vardesc));
# 545 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               _2                                      
                   )
# 61 "CPar.fsy"
                 : 'gentype_Vardesc));
# 556 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 62 "CPar.fsy"
                 : 'gentype_Vardesc));
# 567 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Vardesc));
# 579 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 67 "CPar.fsy"
                 : 'gentype_Fundec));
# 592 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 68 "CPar.fsy"
                 : 'gentype_Fundec));
# 606 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "CPar.fsy"
                                                               [] 
                   )
# 72 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 616 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "CPar.fsy"
                                                               _1 
                   )
# 73 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 627 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "CPar.fsy"
                                                               [_1]     
                   )
# 77 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 638 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 78 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 650 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "CPar.fsy"
                                                               Block _2 
                   )
# 82 "CPar.fsy"
                 : 'gentype_Block));
# 661 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "CPar.fsy"
                                                               [] 
                   )
# 86 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 671 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 87 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 683 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 88 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 695 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                               _1 
                   )
# 92 "CPar.fsy"
                 : 'gentype_Stmt));
# 706 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "CPar.fsy"
                                                               _1 
                   )
# 93 "CPar.fsy"
                 : 'gentype_Stmt));
# 717 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "CPar.fsy"
                                                                         Expr(_1)             
                   )
# 97 "CPar.fsy"
                 : 'gentype_StmtM));
# 728 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                                         Return None          
                   )
# 98 "CPar.fsy"
                 : 'gentype_StmtM));
# 738 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                                         Return(Some(_2))     
                   )
# 99 "CPar.fsy"
                 : 'gentype_StmtM));
# 749 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                                         _1                   
                   )
# 100 "CPar.fsy"
                 : 'gentype_StmtM));
# 760 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                                         If(_3, _5, _7)       
                   )
# 101 "CPar.fsy"
                 : 'gentype_StmtM));
# 773 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                                         While(_3, _5)        
                   )
# 102 "CPar.fsy"
                 : 'gentype_StmtM));
# 785 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                                         Block [Stmt(Expr(_3)); Stmt(While(_5, Block [Stmt(_9); Stmt(Expr(_7))]))] 
                   )
# 103 "CPar.fsy"
                 : 'gentype_StmtM));
# 799 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_Cases in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                                         Switch(_3, _6)       
                   )
# 104 "CPar.fsy"
                 : 'gentype_StmtM));
# 811 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               []                   
                   )
# 108 "CPar.fsy"
                 : 'gentype_Cases));
# 821 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Case in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                               [_1]                 
                   )
# 109 "CPar.fsy"
                 : 'gentype_Cases));
# 832 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Case in
            let _2 = parseState.GetInput(2) :?> 'gentype_Cases in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                               _1 :: _2             
                   )
# 110 "CPar.fsy"
                 : 'gentype_Cases));
# 844 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            let _4 = parseState.GetInput(4) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               Case(_2, _4) 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Case));
# 856 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 116 "CPar.fsy"
                 : 'gentype_StmtU));
# 869 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 117 "CPar.fsy"
                 : 'gentype_StmtU));
# 881 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 118 "CPar.fsy"
                 : 'gentype_StmtU));
# 893 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               Access _1           
                   )
# 122 "CPar.fsy"
                 : 'gentype_Expr));
# 904 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               _1                  
                   )
# 123 "CPar.fsy"
                 : 'gentype_Expr));
# 915 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               _1                  
                   )
# 127 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 926 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 128 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 938 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 129 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 950 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 130 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 961 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 131 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 972 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 132 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 982 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 133 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 994 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 134 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1006 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 135 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1018 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 136 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1030 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 137 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1042 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 138 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1054 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 139 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1066 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 140 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1078 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 141 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1090 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 142 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1102 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 143 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1114 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 144 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1126 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 145 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1138 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               PreInc _2 
                   )
# 146 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1149 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               PreDec _2 
                   )
# 147 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1160 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               Ternary(_1, _3, _5) 
                   )
# 148 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1173 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               CstI _1             
                   )
# 152 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1184 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               _2                  
                   )
# 153 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1195 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               Addr _2             
                   )
# 154 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1206 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               AccVar _1           
                   )
# 158 "CPar.fsy"
                 : 'gentype_Access));
# 1217 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               _2                  
                   )
# 159 "CPar.fsy"
                 : 'gentype_Access));
# 1228 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 160 "CPar.fsy"
                 : 'gentype_Access));
# 1239 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 161 "CPar.fsy"
                 : 'gentype_Access));
# 1250 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 162 "CPar.fsy"
                 : 'gentype_Access));
# 1262 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               []       
                   )
# 166 "CPar.fsy"
                 : 'gentype_Exprs));
# 1272 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               _1       
                   )
# 167 "CPar.fsy"
                 : 'gentype_Exprs));
# 1283 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               [_1]     
                   )
# 171 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1294 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 172 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1306 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               _1       
                   )
# 176 "CPar.fsy"
                 : 'gentype_Const));
# 1317 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               _1       
                   )
# 177 "CPar.fsy"
                 : 'gentype_Const));
# 1328 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               - _2     
                   )
# 178 "CPar.fsy"
                 : 'gentype_Const));
# 1339 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               -1       
                   )
# 179 "CPar.fsy"
                 : 'gentype_Const));
# 1349 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               TypI     
                   )
# 183 "CPar.fsy"
                 : 'gentype_Type));
# 1359 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               TypC     
                   )
# 184 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1370 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 49;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
